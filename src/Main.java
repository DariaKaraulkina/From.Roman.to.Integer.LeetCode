//Римские цифры представлены семью различными символами  : 'I', 'V', 'X', 'L', 'C', 'D', 'M'
//       Значение символа
//    I             1
//    V             5
//    X             10
//    L             50
//    C             100
//    D             500
//    M             1000
//Например,  2 пишется как II римская цифра, просто складывая две единицы. 12пишется как  XII, что просто X + II. Число 27записывается как XXVII,
// то есть XX + V + II.
//
//Римские цифры обычно пишутся от большей к меньшей слева направо. Однако цифра «четыре» не является цифрой «четыре» IIII. Вместо этого число четыре
// записывается как IV. Поскольку единица стоит перед пятеркой, мы вычитаем ее, получая четыре. Тот же принцип применим и к числу девять, которое записывается как IX.
// Есть шесть случаев, когда используется вычитание:
//
// I можно поставить перед V(5) и X(10), чтобы получилось 4 и 9.
// X можно поставить перед L(50) и C(100), чтобы получилось 40 и 90.
// C можно поставить перед D(500) и M(1000), чтобы получить 400 и 900.
// Дана римская цифра, преобразуйте ее в целое число.
// Ввод: s = «III»
// Выход: 3
// Объяснение: III = 3.
public class Main {
  public static void main(String[] args) {
    String inputParameter = "III";
    System.out.println(fromRomanToInteger(inputParameter));
  }
    public static int fromRomanToInteger(String inputParameter) {
      int value = 0; // исходное значение
      int prev = 0; // переведенное значение
      for (char ch : inputParameter.toCharArray()) { // создаю цикл, где входной параметр разбиваю на массив чаров
        switch (ch) {
          case 'I':
            value += 1;
            prev = 1;
            break;
          case 'V':
            value += (prev == 1) ? 3 : 5; //Если предыдущий символ был I (value = 1), это означает, что мы столкнулись с «IV»,
                                          // поэтому прибавьте 3 к общему значению (1 + 3 = 4). Если предыдущий символ не был «I», добавьте 5 к общему значению и
                                          // обновите его prev до 5.
            prev = 5;
            break;
          case 'X':
            value += (prev == 1) ? 8 : 10;
            prev = 10;
            break;
          case 'L':
            value += (prev == 10) ? 30 : 50;
            prev = 50;
            break;
          case 'C':
            value += (prev == 10) ? 80 : 100;
            prev = 100;
            break;
          case 'D':
            value += (prev == 100) ? 300 : 500;
            prev = 500;
            break;
          case 'M':
            value += (prev == 100) ? 800 : 1000;
            prev = 1000;
            break;
        }
      }
      return value;
    }
  }
